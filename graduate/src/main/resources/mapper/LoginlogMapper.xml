<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.graduate.Dao.LoginlogDao">
	<resultMap id="BaseResultMap"
		type="com.graduate.Entity.Loginlog">
		<id column="account" property="account" jdbcType="VARCHAR" />
		<result column="ip" property="ip" jdbcType="VARCHAR" />
		<result column="port" property="port" jdbcType="VARCHAR" />
		<result column="time" property="time" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		account, ip, port, time
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.graduate.Entity.LoginlogExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from loginlog
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from loginlog
		where account = #{account,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		loginlog
		where account = #{account,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.graduate.Entity.LoginlogExample">
		delete from loginlog
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.graduate.Entity.Loginlog">
		insert into loginlog (account,
		ip, port,
		time)
		values (#{account,jdbcType=VARCHAR},
		#{ip,jdbcType=VARCHAR},
		#{port,jdbcType=VARCHAR},
		#{time,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective"
		parameterType="com.graduate.Entity.Loginlog">
		insert into loginlog
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="account != null">
				account,
			</if>
			<if test="ip != null">
				ip,
			</if>
			<if test="port != null">
				port,
			</if>
			<if test="time != null">
				time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="account != null">
				#{account,jdbcType=VARCHAR},
			</if>
			<if test="ip != null">
				#{ip,jdbcType=VARCHAR},
			</if>
			<if test="port != null">
				#{port,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				#{time,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<!-- 查询同一个账户的记录数目 -->
	<select id="countByname" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select count(*) from loginlog
		<where>
			<if test="_parameter !=null">
				account=#{_parameter}
			</if>
		</where>
	</select>
	<!-- 查询同一账户的所有信息 -->
	<select id="listByparam" parameterType="java.lang.String"
		resultType="com.graduate.Entity.Loginlog">
		select * from loginlog
		<where>
			<if test="_parameter !=null">
				account=#{_parameter}
			</if>
		</where>
		order by time DESC

	</select>


	<select id="countByExample"
		parameterType="com.graduate.Entity.LoginlogExample"
		resultType="java.lang.Integer">
		select count(*) from loginlog
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update loginlog
		<set>
			<if test="record.account != null">
				account = #{record.account,jdbcType=VARCHAR},
			</if>
			<if test="record.ip != null">
				ip = #{record.ip,jdbcType=VARCHAR},
			</if>
			<if test="record.port != null">
				port = #{record.port,jdbcType=VARCHAR},
			</if>
			<if test="record.time != null">
				time = #{record.time,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update loginlog
		set account = #{record.account,jdbcType=VARCHAR},
		ip =
		#{record.ip,jdbcType=VARCHAR},
		port = #{record.port,jdbcType=VARCHAR},
		time = #{record.time,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.graduate.Entity.Loginlog">
		update loginlog
		<set>
			<if test="ip != null">
				ip = #{ip,jdbcType=VARCHAR},
			</if>
			<if test="port != null">
				port = #{port,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=TIMESTAMP},
			</if>
		</set>
		where account = #{account,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.graduate.Entity.Loginlog">
		update loginlog
		set ip = #{ip,jdbcType=VARCHAR},
		port =
		#{port,jdbcType=VARCHAR},
		time = #{time,jdbcType=TIMESTAMP}
		where
		account = #{account,jdbcType=VARCHAR}
	</update>
</mapper>